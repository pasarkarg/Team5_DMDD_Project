--CREATING VIEWS FOR ALL THE ASSESTS--


CREATE OR REPLACE VIEW VW_CURRENCY_STATISTICS AS
SELECT a.CUSTOMER_ID,PURCHASE_COST, SALE_COST FROM 
(SELECT CUSTOMER_ID,(SUM(MONEY_INVESTMENT_VALUE) * SUM(PURCHASED_CURRENCY_VALUE)) AS PURCHASE_COST FROM FOREIGN_EXCHANGE_TRANSACTIONS 
WHERE CURRENCY_TRANSACTION_TYPE = 'B' GROUP BY CUSTOMER_ID) a
INNER JOIN
(SELECT customer_id,(SUM(MONEY_INVESTMENT_VALUE) * SUM(PURCHASED_CURRENCY_VALUE)) AS SALE_COST FROM FOREIGN_EXCHANGE_TRANSACTIONS 
WHERE CURRENCY_TRANSACTION_TYPE = 'S' GROUP BY CUSTOMER_ID) b
on a.CUSTOMER_ID = b.CUSTOMER_ID;


CREATE OR REPLACE VIEW VW_MUTUAL_STATISTICS AS
SELECT a.CUSTOMER_ID,PURCHASE_COST, SALE_COST FROM 
(SELECT CUSTOMER_ID,(SUM(MUTUAL_NAV_PRICE) * SUM(MUTUAL_UNITS)) AS PURCHASE_COST FROM MUTUAL_FUND_TRANSACTIONS 
WHERE MUTUAL_TRANSACTION_TYPE = 'B' GROUP BY CUSTOMER_ID) a
INNER JOIN
(SELECT customer_id,(SUM(MUTUAL_NAV_PRICE) * SUM(MUTUAL_UNITS)) AS SALE_COST FROM MUTUAL_FUND_TRANSACTIONS 
WHERE MUTUAL_TRANSACTION_TYPE = 'S' GROUP BY CUSTOMER_ID) b
on a.CUSTOMER_ID = b.CUSTOMER_ID;


CREATE OR REPLACE VIEW VW_STOCK_STATISTICS AS
SELECT a.CUSTOMER_ID,PURCHASE_COST, SALE_COST FROM 
(SELECT CUSTOMER_ID,(SUM(STOCK_UNIT_PRICE) * SUM(STOCK_UNITS)) AS PURCHASE_COST FROM STOCK_TRANSACTIONS 
WHERE STOCK_TRANSACTION_TYPE = 'B' GROUP BY CUSTOMER_ID) a
INNER JOIN
(SELECT CUSTOMER_ID,(SUM(STOCK_UNIT_PRICE) * SUM(STOCK_UNITS)) AS SALE_COST FROM STOCK_TRANSACTIONS 
WHERE STOCK_TRANSACTION_TYPE = 'S' GROUP BY CUSTOMER_ID) b
on a.CUSTOMER_ID = b.CUSTOMER_ID;


CREATE OR REPLACE VIEW VW_CRYPTO_STATISTICS AS
SELECT a.CUSTOMER_ID,PURCHASE_COST, SALE_COST FROM 
(SELECT CUSTOMER_ID,(SUM(CRYPTO_TRANSACTION_PRICE) * SUM(CRYPTO_UNITS)) AS PURCHASE_COST FROM CRYPTOCURRENCY_TRANSACTIONS 
WHERE CRYPTO_TRANSACTION_TYPE = 'B' GROUP BY CUSTOMER_ID) a
INNER JOIN
(SELECT customer_id,(SUM(CRYPTO_TRANSACTION_PRICE) * SUM(CRYPTO_UNITS)) AS SALE_COST FROM CRYPTOCURRENCY_TRANSACTIONS 
WHERE CRYPTO_TRANSACTION_TYPE = 'S' GROUP BY CUSTOMER_ID) b
on a.CUSTOMER_ID = b.CUSTOMER_ID;


----------------------------------------------------------------------------------------------------------------------

--CREATING REPORTS FOR ALL THE ASSESTS--

SELECT CUSTOMER_ID, SALE_COST - PURCHASE_COST AS CURRENCY_INVESTMENT_RESULT
FROM 
VW_CURRENCY_STATISTICS;

SELECT CUSTOMER_ID, SALE_COST - PURCHASE_COST AS CRYPTO_INVESTMENT_RESULT
FROM 
VW_CRYPTO_STATISTICS;

SELECT CUSTOMER_ID, SALE_COST - PURCHASE_COST AS MUTUAL_FUND_INVESTMENT_RESULT
FROM 
VW_MUTUAL_STATISTICS;

SELECT CUSTOMER_ID, SALE_COST - PURCHASE_COST AS STOCK_INVESTMENT_RESULT
FROM 
VW_STOCK_STATISTICS;


    